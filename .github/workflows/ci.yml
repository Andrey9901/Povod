name: Povod CI Tests and Reports

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    # Предоставляем необходимые права для GITHUB_TOKEN, используемого в этом job'е
    permissions:
      contents: write # Необходимо для peaceiris/actions-gh-pages для пуша в ветку (например, gh-pages)
      pages: write    # Необходимо для деплоя на GitHub Pages
      id-token: write # Может понадобиться для некоторых advanced GitHub Pages setups

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Используем конкретную LTS версию Node.js для консистентности, 
          # а не matrix, если не требуется тестирование на нескольких версиях Node.
          node-version: '18.x' 
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (SAST)
        run: npm run lint

      - name: Run Jest unit tests (generates Allure results)
        run: npm run test:unit

      - name: Run Cypress tests (generates Allure results)
        run: npm run test:ci 
        env:
          MONGODB_URI: mongodb://localhost:27017/povod_ci_test
          PORT: 3001
          SESSION_SECRET: ${{ secrets.SESSION_SECRET || 'a_very_strong_ci_secret_key_default' }} # Используйте GitHub Secrets для таких значений
          # CYPRESS_BASE_URL: http://localhost:3001 # Обычно берется из cypress.config.js

      - name: Store Cypress artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-failures
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 7

      - name: Set up Allure Commandline
        run: npm install -g allure-commandline

      - name: Create Allure Environment Properties
        if: always()
        run: |
          echo "Application_Version=$(npm pkg get version | tr -d '\"')" > allure-results/environment.properties
          echo "Base_URL=${{ env.CYPRESS_BASE_URL || 'http://localhost:3001' }}" >> allure-results/environment.properties
          echo "Node.js_Version=$(node -v)" >> allure-results/environment.properties # Получаем фактическую версию Node, используемую runner'ом
          echo "Operating_System=${{ runner.os }}" >> allure-results/environment.properties
          echo "Branch=${{ github.ref_name }}" >> allure-results/environment.properties
          echo "Commit_SHA=${{ github.sha }}" >> allure-results/environment.properties
          echo "Run_ID=${{ github.run_id }}" >> allure-results/environment.properties
          echo "Triggered_By=${{ github.actor }}" >> allure-results/environment.properties

      - name: Generate Allure report
        if: always()
        # Используйте allurectl, если setup-allurectl его устанавливает, или allure, если устанавливаете allure-commandline
        run: allure generate allure-results --clean -o allure-report
        # Альтернатива, если используете старый allure-commandline:
        # run: allure generate allure-results --clean -o allure-report


      - name: Upload Allure report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-html-report
          path: allure-report
          retention-days: 30
          
      - name: Deploy Allure Report to GitHub Pages
        # Запускаем только для пушей в main или develop и если все предыдущие шаги успешны
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Этот токен теперь будет иметь нужные права благодаря permissions
          publish_dir: ./allure-report
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@github.com'
          commit_message: 'Allure report' # Используйте английский или ваш язык для commit message
          # publish_branch: gh-pages # Ветка, куда будет опубликован отчет (по умолчанию)
          keep_files: true # Установите true, если хотите сохранять историю отчетов и видеть тренды в Allure